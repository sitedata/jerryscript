
--- Script parsing start ---

  [  1] CBC_PUSH_LITERAL idx:0->ident(next_statement)
  [  0] CBC_POP_BLOCK
  [  1] CBC_CREATE_OBJECT
  [  0] CBC_POP
  [  1] CBC_CREATE_OBJECT
  [  0] CBC_POP
  [  1] CBC_CREATE_OBJECT
  [  0] CBC_BRANCH_IF_FALSE_FORWARD
  [  0] CBC_POST_INCR_IDENT_BLOCK idx:1->ident(x)
  [  1] CBC_PUSH_LITERAL idx:0->ident(next_statement)
  [  0] CBC_POP_BLOCK
  [  1] CBC_CREATE_OBJECT
  [  1] CBC_SET_LITERAL_PROPERTY idx:4->string(exp) idx:3->string(member)
  [  2] CBC_ADD_TWO_LITERALS idx:6->ident(a) idx:7->ident(b)
  [  1] CBC_SET_PROPERTY idx:5->string(set)
  [  1] CBC_SET_LITERAL_PROPERTY idx:9->ident(c) idx:8->string(get)
  [  0] CBC_ASSIGN_SET_IDENT idx:2->var_ident(get)
  [  1] CBC_PUSH_LITERAL idx:0->ident(next_statement)
  [  0] CBC_POP_BLOCK
  [  1] CBC_CREATE_OBJECT
  [  2] CBC_PUSH_LITERAL idx:6->ident(a)
  [  1] CBC_BRANCH_IF_FALSE_FORWARD
  [  2] CBC_PUSH_LITERAL idx:7->ident(b)
  [  2] CBC_JUMP_FORWARD
  [  2] CBC_PUSH_LITERAL idx:9->ident(c)
  [  1] CBC_SET_PROPERTY idx:8->string(get)
  [  1] CBC_SET_LITERAL_PROPERTY idx:11->ident(value) idx:5->string(set)
  [  0] CBC_ASSIGN_SET_IDENT idx:10->var_ident(set)
  [  1] CBC_PUSH_LITERAL idx:0->ident(next_statement)
  [  0] CBC_POP_BLOCK
  [  1] CBC_CREATE_OBJECT

--- Function parsing start ---


Final byte code dump:

  Maximum stack depth: 0
  Flags: [small_lit_enc,no_lexical_env]
  Argument range end: 0
  Register range end: 0
  Identifier range end: 0
  Const literal range end: 0
  Literal range end: 0

   0 : CBC_RETURN_WITH_BLOCK

Byte code size: 1 bytes

--- Function parsing end ---

  [  1] CBC_SET_LITERAL_PROPERTY idx:13->function idx:12->string(function)

--- Function parsing start ---


Final byte code dump:

  Maximum stack depth: 0
  Flags: [small_lit_enc,no_lexical_env]
  Argument range end: 0
  Register range end: 0
  Identifier range end: 0
  Const literal range end: 0
  Literal range end: 0

   0 : CBC_RETURN_WITH_BLOCK

Byte code size: 1 bytes

--- Function parsing end ---

  [  1] CBC_EXT_SET_GETTER idx:8->string(get) idx:14->function

--- Function parsing start ---


Final byte code dump:

  Maximum stack depth: 1
  Flags: [small_lit_enc,no_lexical_env]
  Argument range end: 1
  Register range end: 1
  Identifier range end: 1
  Const literal range end: 1
  Literal range end: 1

   0 : CBC_RETURN_WITH_BLOCK

Byte code size: 1 bytes

--- Function parsing end ---

  [  1] CBC_EXT_SET_SETTER idx:5->string(set) idx:15->function

--- Function parsing start ---


Final byte code dump:

  Maximum stack depth: 0
  Flags: [small_lit_enc,no_lexical_env]
  Argument range end: 0
  Register range end: 0
  Identifier range end: 0
  Const literal range end: 0
  Literal range end: 0

   0 : CBC_RETURN_WITH_BLOCK

Byte code size: 1 bytes

--- Function parsing end ---

  [  1] CBC_EXT_SET_GETTER idx:16->string(get2) idx:17->function
  [  0] CBC_POP_BLOCK
  [  1] CBC_PUSH_LITERAL idx:0->ident(next_statement)
  [  0] CBC_POP_BLOCK
  [  1] CBC_CREATE_OBJECT
  [  1] CBC_SET_LITERAL_PROPERTY idx:19->number(0x09Af) idx:18->number(.3)
  [  1] CBC_SET_LITERAL_PROPERTY idx:21->number(14.) idx:20->number(12e-1)
  [  2] CBC_CREATE_OBJECT
  [  3] CBC_ADD_TWO_LITERALS idx:24->number(0.077) idx:25->number(9074)
  [  2] CBC_SET_PROPERTY idx:23->number(0e+3)
  [  1] CBC_SET_PROPERTY idx:22->number(0XFaBe0189)
  [  0] CBC_POP_BLOCK
  [  1] CBC_PUSH_LITERAL idx:0->ident(next_statement)
  [  0] CBC_POP_BLOCK
  [  1] CBC_CREATE_OBJECT
  [  3] CBC_PUSH_TWO_LITERALS idx:27->ident(f) idx:1->ident(x)
  [  2] CBC_CALL1_PUSH_RESULT
  [  1] CBC_SET_PROPERTY idx:26->string(a)
  [  3] CBC_PUSH_TWO_LITERALS idx:27->ident(f) idx:28->ident(y)
  [  2] CBC_CALL1_PUSH_RESULT
  [  2] CBC_ADD_RIGHT_LITERAL idx:29->number(5)
  [  1] CBC_SET_PROPERTY idx:26->string(a)
  [  0] CBC_POP_BLOCK
  [  1] CBC_PUSH_LITERAL idx:0->ident(next_statement)
  [  0] CBC_POP_BLOCK
  [  1] CBC_PUSH_LITERAL idx:6->ident(a)
  [  1] CBC_EXT_WITH_CREATE_CONTEXT
  [  2] CBC_CREATE_OBJECT
  [  5] CBC_PUSH_IDENT_REFERENCE idx:31->ident(msg)
  [  5] CBC_EXT_RESOLVE_BASE
  [  3] CBC_CALL0_PROP_PUSH_RESULT
  [  2] CBC_SET_PROPERTY idx:30->string(err)
  [  5] CBC_PUSH_IDENT_REFERENCE idx:32->ident(msg2)
  [  5] CBC_EXT_RESOLVE_BASE
  [  6] CBC_PUSH_LITERAL idx:33->string(another)
  [  3] CBC_CALL1_PROP_PUSH_RESULT
  [  2] CBC_SET_PROPERTY idx:30->string(err)
  [  1] CBC_THROW
  [  0] CBC_CONTEXT_END

Final byte code dump:

  Maximum stack depth: 6
  Flags: [small_lit_enc]
  Argument range end: 0
  Register range end: 0
  Identifier range end: 12
  Const literal range end: 30
  Literal range end: 34

   0 : CBC_DEFINE_VARS from: 0 to: 1
         idx:0(ident)->var_ident(get)
         idx:1(ident)->var_ident(set)
   2 : CBC_PUSH_LITERAL idx:2(ident)->ident(next_statement)
   4 : CBC_POP_BLOCK
   5 : CBC_CREATE_OBJECT
   6 : CBC_POP
   7 : CBC_CREATE_OBJECT
   8 : CBC_POP
   9 : CBC_CREATE_OBJECT
  10 : CBC_BRANCH_IF_FALSE_FORWARD offset:4(->14)
  12 : CBC_POST_INCR_IDENT_BLOCK idx:3(ident)->ident(x)
  14 : CBC_PUSH_LITERAL idx:2(ident)->ident(next_statement)
  16 : CBC_POP_BLOCK
  17 : CBC_CREATE_OBJECT
  18 : CBC_SET_LITERAL_PROPERTY idx:13(lit)->string(exp) idx:12(lit)->string(member)
  21 : CBC_ADD_TWO_LITERALS idx:4(ident)->ident(a) idx:5(ident)->ident(b)
  24 : CBC_SET_PROPERTY idx:14(lit)->string(set)
  26 : CBC_SET_LITERAL_PROPERTY idx:6(ident)->ident(c) idx:15(lit)->string(get)
  29 : CBC_ASSIGN_SET_IDENT idx:0(ident)->var_ident(get)
  31 : CBC_PUSH_LITERAL idx:2(ident)->ident(next_statement)
  33 : CBC_POP_BLOCK
  34 : CBC_CREATE_OBJECT
  35 : CBC_PUSH_LITERAL idx:4(ident)->ident(a)
  37 : CBC_BRANCH_IF_FALSE_FORWARD offset:6(->43)
  39 : CBC_PUSH_LITERAL idx:5(ident)->ident(b)
  41 : CBC_JUMP_FORWARD offset:4(->45)
  43 : CBC_PUSH_LITERAL idx:6(ident)->ident(c)
  45 : CBC_SET_PROPERTY idx:15(lit)->string(get)
  47 : CBC_SET_LITERAL_PROPERTY idx:7(ident)->ident(value) idx:14(lit)->string(set)
  50 : CBC_ASSIGN_SET_IDENT idx:1(ident)->var_ident(set)
  52 : CBC_PUSH_LITERAL idx:2(ident)->ident(next_statement)
  54 : CBC_POP_BLOCK
  55 : CBC_CREATE_OBJECT
  56 : CBC_SET_LITERAL_PROPERTY idx:30(lit)->function idx:16(lit)->string(function)
  59 : CBC_EXT_SET_GETTER idx:15(lit)->string(get) idx:31(lit)->function
  63 : CBC_EXT_SET_SETTER idx:14(lit)->string(set) idx:32(lit)->function
  67 : CBC_EXT_SET_GETTER idx:17(lit)->string(get2) idx:33(lit)->function
  71 : CBC_POP_BLOCK
  72 : CBC_PUSH_LITERAL idx:2(ident)->ident(next_statement)
  74 : CBC_POP_BLOCK
  75 : CBC_CREATE_OBJECT
  76 : CBC_SET_LITERAL_PROPERTY idx:19(lit)->number(0x09Af) idx:18(lit)->number(.3)
  79 : CBC_SET_LITERAL_PROPERTY idx:21(lit)->number(14.) idx:20(lit)->number(12e-1)
  82 : CBC_CREATE_OBJECT
  83 : CBC_ADD_TWO_LITERALS idx:24(lit)->number(0.077) idx:25(lit)->number(9074)
  86 : CBC_SET_PROPERTY idx:23(lit)->number(0e+3)
  88 : CBC_SET_PROPERTY idx:22(lit)->number(0XFaBe0189)
  90 : CBC_POP_BLOCK
  91 : CBC_PUSH_LITERAL idx:2(ident)->ident(next_statement)
  93 : CBC_POP_BLOCK
  94 : CBC_CREATE_OBJECT
  95 : CBC_PUSH_TWO_LITERALS idx:8(ident)->ident(f) idx:3(ident)->ident(x)
  98 : CBC_CALL1_PUSH_RESULT
  99 : CBC_SET_PROPERTY idx:26(lit)->string(a)
 101 : CBC_PUSH_TWO_LITERALS idx:8(ident)->ident(f) idx:9(ident)->ident(y)
 104 : CBC_CALL1_PUSH_RESULT
 105 : CBC_ADD_RIGHT_LITERAL idx:27(lit)->number(5)
 107 : CBC_SET_PROPERTY idx:26(lit)->string(a)
 109 : CBC_POP_BLOCK
 110 : CBC_PUSH_LITERAL idx:2(ident)->ident(next_statement)
 112 : CBC_POP_BLOCK
 113 : CBC_PUSH_LITERAL idx:4(ident)->ident(a)
 115 : CBC_EXT_WITH_CREATE_CONTEXT offset:22(->137)
 118 : CBC_CREATE_OBJECT
 119 : CBC_PUSH_IDENT_REFERENCE idx:10(ident)->ident(msg)
 121 : CBC_EXT_RESOLVE_BASE
 123 : CBC_CALL0_PROP_PUSH_RESULT
 124 : CBC_SET_PROPERTY idx:28(lit)->string(err)
 126 : CBC_PUSH_IDENT_REFERENCE idx:11(ident)->ident(msg2)
 128 : CBC_EXT_RESOLVE_BASE
 130 : CBC_PUSH_LITERAL idx:29(lit)->string(another)
 132 : CBC_CALL1_PROP_PUSH_RESULT
 133 : CBC_SET_PROPERTY idx:28(lit)->string(err)
 135 : CBC_THROW
 136 : CBC_CONTEXT_END
 137 : CBC_RETURN_WITH_BLOCK

Byte code size: 138 bytes

Script parsing successfully completed. Total byte code size: 142 bytes

--- Script parsing end ---


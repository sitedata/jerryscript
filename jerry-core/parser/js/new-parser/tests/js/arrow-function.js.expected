
--- Script parsing start ---


--- Arrow function parsing start ---

  [  0] CBC_RETURN_WITH_LITERAL idx:0->var_ident(x)

Final byte code dump:

  Maximum stack depth: 1
  Flags: [small_lit_enc,no_lexical_env,arrow]
  Argument range end: 1
  Register range end: 1
  Identifier range end: 1
  Const literal range end: 1
  Literal range end: 1

   0 : CBC_RETURN_WITH_LITERAL idx:0(arg)->var_ident(x)

Byte code size: 2 bytes

--- Arrow function parsing end ---

  [  1] CBC_PUSH_LITERAL idx:0->function
  [  0] CBC_POP_BLOCK

--- Arrow function parsing start ---

  [  1] CBC_PUSH_NUMBER_POS_BYTE number:1
  [  1] CBC_ADD_RIGHT_LITERAL idx:0->var_ident(x)
  [  0] CBC_RETURN

Final byte code dump:

  Maximum stack depth: 2
  Flags: [small_lit_enc,no_lexical_env,arrow]
  Argument range end: 1
  Register range end: 1
  Identifier range end: 1
  Const literal range end: 1
  Literal range end: 1

   0 : CBC_PUSH_NUMBER_POS_BYTE number:1
   2 : CBC_ADD_RIGHT_LITERAL idx:0(arg)->var_ident(x)
   4 : CBC_RETURN

Byte code size: 5 bytes

--- Arrow function parsing end ---

  [  1] CBC_PUSH_LITERAL idx:1->function
  [  0] CBC_POP_BLOCK

--- Arrow function parsing start ---

  [  1] CBC_POST_INCR_IDENT_PUSH_RESULT idx:0->var_ident(arguments)
  [  0] CBC_RETURN

Final byte code dump:

  Maximum stack depth: 2
  Flags: [small_lit_enc,no_lexical_env,arrow]
  Argument range end: 1
  Register range end: 1
  Identifier range end: 1
  Const literal range end: 1
  Literal range end: 1

   0 : CBC_POST_INCR_IDENT_PUSH_RESULT idx:0(arg)->var_ident(arguments)
   2 : CBC_RETURN

Byte code size: 3 bytes

--- Arrow function parsing end ---

  [  1] CBC_PUSH_LITERAL idx:2->function
  [  0] CBC_POP_BLOCK
  [  1] CBC_PUSH_LITERAL idx:3->ident(nothing)
  [  0] CBC_POP_BLOCK

--- Arrow function parsing start ---

  [  1] CBC_PUSH_NUMBER_POS_BYTE number:6
  [  0] CBC_RETURN

Final byte code dump:

  Maximum stack depth: 1
  Flags: [small_lit_enc,no_lexical_env,arrow]
  Argument range end: 0
  Register range end: 0
  Identifier range end: 0
  Const literal range end: 0
  Literal range end: 0

   0 : CBC_PUSH_NUMBER_POS_BYTE number:6
   2 : CBC_RETURN

Byte code size: 3 bytes

--- Arrow function parsing end ---

  [  1] CBC_PUSH_LITERAL idx:4->function
  [  0] CBC_POP_BLOCK
  [  1] CBC_PUSH_LITERAL idx:3->ident(nothing)
  [  0] CBC_POP_BLOCK

--- Arrow function parsing start ---

  [  1] CBC_ADD_TWO_LITERALS idx:0->var_ident(x) idx:1->var_ident(y)
  [  0] CBC_POP

Final byte code dump:

  Maximum stack depth: 3
  Flags: [small_lit_enc,no_lexical_env,arrow]
  Argument range end: 2
  Register range end: 2
  Identifier range end: 2
  Const literal range end: 2
  Literal range end: 2

   0 : CBC_ADD_TWO_LITERALS idx:0(arg)->var_ident(x) idx:1(arg)->var_ident(y)
   3 : CBC_POP
   4 : CBC_RETURN_WITH_BLOCK

Byte code size: 5 bytes

--- Arrow function parsing end ---

  [  1] CBC_PUSH_LITERAL idx:5->function
  [  0] CBC_POP_BLOCK

--- Arrow function parsing start ---

  [  2] CBC_PUSH_TWO_LITERALS idx:1->ident(eval) idx:0->var_ident(ev)
  [  2] CBC_EVAL
  [  1] CBC_CALL1_PUSH_RESULT
  [  0] CBC_RETURN

Final byte code dump:

  Maximum stack depth: 3
  Flags: [small_lit_enc,arrow]
  Argument range end: 1
  Register range end: 1
  Identifier range end: 3
  Const literal range end: 3
  Literal range end: 3

   0 : CBC_INITIALIZE_VAR idx:1(ident)->var_ident(ev) idx:0(arg)->undefined
   3 : CBC_PUSH_TWO_LITERALS idx:2(ident)->ident(eval) idx:1(ident)->var_ident(ev)
   6 : CBC_EVAL
   7 : CBC_CALL1_PUSH_RESULT
   8 : CBC_RETURN

Byte code size: 9 bytes

--- Arrow function parsing end ---

  [  1] CBC_PUSH_LITERAL idx:6->function
  [  0] CBC_POP_BLOCK

Final byte code dump:

  Maximum stack depth: 1
  Flags: [small_lit_enc]
  Argument range end: 0
  Register range end: 0
  Identifier range end: 1
  Const literal range end: 1
  Literal range end: 7

   0 : CBC_PUSH_LITERAL idx:1(lit)->function
   2 : CBC_POP_BLOCK
   3 : CBC_PUSH_LITERAL idx:2(lit)->function
   5 : CBC_POP_BLOCK
   6 : CBC_PUSH_LITERAL idx:3(lit)->function
   8 : CBC_POP_BLOCK
   9 : CBC_PUSH_LITERAL idx:0(ident)->ident(nothing)
  11 : CBC_POP_BLOCK
  12 : CBC_PUSH_LITERAL idx:4(lit)->function
  14 : CBC_POP_BLOCK
  15 : CBC_PUSH_LITERAL idx:0(ident)->ident(nothing)
  17 : CBC_POP_BLOCK
  18 : CBC_PUSH_LITERAL idx:5(lit)->function
  20 : CBC_POP_BLOCK
  21 : CBC_PUSH_LITERAL idx:6(lit)->function
  23 : CBC_POP_BLOCK
  24 : CBC_RETURN_WITH_BLOCK

Byte code size: 25 bytes

Script parsing successfully completed. Total byte code size: 52 bytes

--- Script parsing end ---

